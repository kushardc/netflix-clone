{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kushar Dev Chhibber\\\\OneDrive\\\\Desktop\\\\NETFLIX CLONE\\\\netflix-clone\\\\src\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport \"./Row.css\";\nimport Youtube from \"react-youtube\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row(_ref) {\n  _s();\n\n  let {\n    title,\n    fetchUrl,\n    isLargeRow\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      console.log(request);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1\n    }\n  };\n  console.table(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `row__poster ${isLargeRow && \"row__posterLarge\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Youtube, {\n      videoId: \"6RrEQJNZwPQ\",\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useState","useEffect","axios","Youtube","base_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","fetchData","request","get","console","log","data","results","opts","height","width","playerVars","autoplay","table","map","movie","poster_path","backdrop_path","name","id"],"sources":["C:/Users/Kushar Dev Chhibber/OneDrive/Desktop/NETFLIX CLONE/netflix-clone/src/Row.js"],"sourcesContent":["import React, { useState, useEffect }from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\" ;\r\nimport Youtube from \"react-youtube\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\n  function Row({ title, fetchUrl, isLargeRow }) {\r\n   const [movies, setMovies] = useState([]);\r\n       \r\n   useEffect(() => {\r\n   async function fetchData() {\r\n    const request = await axios.get( fetchUrl);\r\n    console.log (request);\r\n    setMovies(request.data.results);\r\n\r\n    return request;\r\n   } fetchData();\r\n    }, [fetchUrl]);\r\n\r\n\r\n    const opts = {\r\n      height: \"390\",\r\n      width: \"100%\",\r\n      playerVars : {\r\n      \r\n        autoplay: 1,\r\n      },\r\n    };\r\n\r\n    \r\n    console.table(movies);\r\n\r\n  return (\r\n      < div className=\"row\">\r\n      <h2>{title}</h2>\r\n\r\n      < div className=\"row__posters\">\r\n\r\n    {movies.map(movie => (\r\n        <img \r\n        key = {movie.id}\r\n        className= {`row__poster ${isLargeRow &&  \"row__posterLarge\"}`}\r\n        src = {`${base_url}${isLargeRow? movie.poster_path: movie.backdrop_path }`}\r\n         alt ={movie.name}\r\n    />\r\n    ))}\r\n</div>\r\n<Youtube videoId = \"6RrEQJNZwPQ\" opts = {opts} />\r\n</div>\r\n  );\r\n    }\r\nexport default Row;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,MAAMC,QAAQ,GAAG,sCAAjB;;AAEE,SAASC,GAAT,OAA8C;EAAA;;EAAA,IAAjC;IAAEC,KAAF;IAASC,QAAT;IAAmBC;EAAnB,CAAiC;EAC7C,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;EAEAC,SAAS,CAAC,MAAM;IAChB,eAAeU,SAAf,GAA2B;MAC1B,MAAMC,OAAO,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAWN,QAAX,CAAtB;MACAO,OAAO,CAACC,GAAR,CAAaH,OAAb;MACAF,SAAS,CAACE,OAAO,CAACI,IAAR,CAAaC,OAAd,CAAT;MAEA,OAAOL,OAAP;IACA;;IAACD,SAAS;EACT,CARO,EAQL,CAACJ,QAAD,CARK,CAAT;EAWC,MAAMW,IAAI,GAAG;IACXC,MAAM,EAAE,KADG;IAEXC,KAAK,EAAE,MAFI;IAGXC,UAAU,EAAG;MAEXC,QAAQ,EAAE;IAFC;EAHF,CAAb;EAUAR,OAAO,CAACS,KAAR,CAAcd,MAAd;EAEF,oBACI;IAAM,SAAS,EAAC,KAAhB;IAAA,wBACA;MAAA,UAAKH;IAAL;MAAA;MAAA;MAAA;IAAA,QADA,eAGA;MAAM,SAAS,EAAC,cAAhB;MAAA,UAEDG,MAAM,CAACe,GAAP,CAAWC,KAAK,iBACb;QAEA,SAAS,EAAI,eAAcjB,UAAU,IAAK,kBAAmB,EAF7D;QAGA,GAAG,EAAK,GAAEJ,QAAS,GAAEI,UAAU,GAAEiB,KAAK,CAACC,WAAR,GAAqBD,KAAK,CAACE,aAAe,EAHzE;QAIC,GAAG,EAAGF,KAAK,CAACG;MAJb,GACOH,KAAK,CAACI,EADb;QAAA;QAAA;QAAA;MAAA,QADH;IAFC;MAAA;MAAA;MAAA;IAAA,QAHA,eAcN,QAAC,OAAD;MAAS,OAAO,EAAG,aAAnB;MAAiC,IAAI,EAAIX;IAAzC;MAAA;MAAA;MAAA;IAAA,QAdM;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBG;;GA5CMb,G;;KAAAA,G;AA6CX,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}