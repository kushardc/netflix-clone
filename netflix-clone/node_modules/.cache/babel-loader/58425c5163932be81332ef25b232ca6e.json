{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kushar Dev Chhibber\\\\OneDrive\\\\Desktop\\\\NETFLIX CLONE\\\\netflix-clone\\\\src\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport \"./Row.css\";\nimport Youtube from \"react-youtube\";\nimport movieTrailer from 'movie-trailer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nconst Row = _ref => {\n  _s();\n\n  let {\n    title,\n    fetchUrl,\n    isLargeRow\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {},\n    autoplay: 1\n  };\n\n  const handleClick = movie => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      movieTrailer((movie === null || movie === void 0 ? void 0 : movie.name) || \"\").then(url => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get('v'));\n      }).catch(error => console.log(error));\n    }\n  };\n\n  console.table(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleClick(movie),\n        className: `row__poster ${isLargeRow && \"row__posterLarge\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), trailerUrl, \" && \", /*#__PURE__*/_jsxDEV(Youtube, {\n      videoId: trailerUrl,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Row, \"k63ruaDr6ck94JTzLN3dN+sD/HM=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useState","useEffect","axios","Youtube","movieTrailer","base_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","fetchData","request","get","data","results","opts","height","width","playerVars","autoplay","handleClick","movie","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","table","map","poster_path","backdrop_path","id"],"sources":["C:/Users/Kushar Dev Chhibber/OneDrive/Desktop/NETFLIX CLONE/netflix-clone/src/Row.js"],"sourcesContent":["import React, { useState, useEffect }from \"react\";\r\nimport axios from \"./axios\";\r\n\r\nimport \"./Row.css\" ;\r\n\r\nimport Youtube from \"react-youtube\";\r\nimport movieTrailer from 'movie-trailer';\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nconst Row = ({ title, fetchUrl, isLargeRow }) => {\r\n   const [movies, setMovies] = useState([]);\r\n   const [trailerUrl, setTrailerUrl] = useState (\"\");\r\n\r\n   useEffect(() => {\r\n   async function fetchData() {\r\n    const request = await axios.get( fetchUrl);\r\n    setMovies(request.data.results);\r\n    return request;\r\n\r\n   }\r\n    fetchData();\r\n    }, [fetchUrl]);\r\n\r\n\r\n    const opts = {\r\n      height: \"390\",\r\n      width: \"100%\",\r\n      playerVars : {\r\n      },\r\n        autoplay: 1,\r\n    };\r\n\r\nconst handleClick = (movie) => {\r\n      if (trailerUrl){\r\n        setTrailerUrl(\"\");\r\n      } else{\r\n        movieTrailer (movie?.name || \"\")\r\n        .then(url => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n         setTrailerUrl( urlParams.get('v'));\r\n        })\r\n        .catch((error) =>console.log(error));\r\n      }\r\n\r\n    }\r\n    console.table(movies);\r\n\r\n  return (\r\n      < div className=\"row\">\r\n      <h2>{title}</h2>\r\n\r\n      < div className=\"row__posters\">\r\n\r\n    {movies.map(movie => (\r\n        <img \r\n        key = {movie.id}\r\n        onClick ={() => handleClick(movie)}\r\n        className= {`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n        src = {`${base_url}${isLargeRow? movie.poster_path: movie.backdrop_path }`}\r\n         alt ={movie.name}\r\n    />\r\n    ))}\r\n</div>\r\n{trailerUrl} && <Youtube videoId = {trailerUrl} opts = {opts} />\r\n</div>\r\n  );\r\n    }\r\nexport default Row;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAO,WAAP;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,YAAP,MAAyB,eAAzB;;AAEA,MAAMC,QAAQ,GAAG,sCAAjB;;AAEA,MAAMC,GAAG,GAAG,QAAqC;EAAA;;EAAA,IAApC;IAAEC,KAAF;IAASC,QAAT;IAAmBC;EAAnB,CAAoC;EAC9C,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAE,EAAF,CAA5C;EAEAC,SAAS,CAAC,MAAM;IAChB,eAAea,SAAf,GAA2B;MAC1B,MAAMC,OAAO,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAWR,QAAX,CAAtB;MACAG,SAAS,CAACI,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;MACA,OAAOH,OAAP;IAEA;;IACAD,SAAS;EACR,CARO,EAQL,CAACN,QAAD,CARK,CAAT;EAWC,MAAMW,IAAI,GAAG;IACXC,MAAM,EAAE,KADG;IAEXC,KAAK,EAAE,MAFI;IAGXC,UAAU,EAAG,EAHF;IAKTC,QAAQ,EAAE;EALD,CAAb;;EAQJ,MAAMC,WAAW,GAAIC,KAAD,IAAW;IACzB,IAAIb,UAAJ,EAAe;MACbC,aAAa,CAAC,EAAD,CAAb;IACD,CAFD,MAEM;MACJT,YAAY,CAAE,CAAAqB,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEC,IAAP,KAAe,EAAjB,CAAZ,CACCC,IADD,CACMC,GAAG,IAAI;QACX,MAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoB,IAAIC,GAAJ,CAAQH,GAAR,EAAaI,MAAjC,CAAlB;QACDnB,aAAa,CAAEgB,SAAS,CAACb,GAAV,CAAc,GAAd,CAAF,CAAb;MACA,CAJD,EAKCiB,KALD,CAKQC,KAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CALjB;IAMD;EAEF,CAZL;;EAaIC,OAAO,CAACE,KAAR,CAAc3B,MAAd;EAEF,oBACI;IAAM,SAAS,EAAC,KAAhB;IAAA,wBACA;MAAA,UAAKH;IAAL;MAAA;MAAA;MAAA;IAAA,QADA,eAGA;MAAM,SAAS,EAAC,cAAhB;MAAA,UAEDG,MAAM,CAAC4B,GAAP,CAAWb,KAAK,iBACb;QAEA,OAAO,EAAG,MAAMD,WAAW,CAACC,KAAD,CAF3B;QAGA,SAAS,EAAI,eAAchB,UAAU,IAAI,kBAAmB,EAH5D;QAIA,GAAG,EAAK,GAAEJ,QAAS,GAAEI,UAAU,GAAEgB,KAAK,CAACc,WAAR,GAAqBd,KAAK,CAACe,aAAe,EAJzE;QAKC,GAAG,EAAGf,KAAK,CAACC;MALb,GACOD,KAAK,CAACgB,EADb;QAAA;QAAA;QAAA;MAAA,QADH;IAFC;MAAA;MAAA;MAAA;IAAA,QAHA,EAeL7B,UAfK,uBAeU,QAAC,OAAD;MAAS,OAAO,EAAIA,UAApB;MAAgC,IAAI,EAAIO;IAAxC;MAAA;MAAA;MAAA;IAAA,QAfV;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBG,CAzDL;;GAAMb,G;;KAAAA,G;AA0DN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}